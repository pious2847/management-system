<!DOCTYPE html>
<html lang="en">
<%- include('./layouts/header') %>

    <body>
        <%- include('./popups/alert') %>

            <div class="container-fluid">
                <div class="row">
                    <%- include('./layouts/sidebar') %>
                        <!-- Mobile Overlay -->
                        <div class="mobile-overlay"></div>
                        <div class="main-content p-3">
                            <%- include('./layouts/topnav') %>

                                <div class="content-wrapper my-5">
                                    <!-- Sales Overview Cards -->
                                    <div class="row mb-4">
                                        <div class="col-md-4">
                                            <div class="card bg-primary text-white">
                                                <div class="card-body">
                                                    <h5 class="card-title">Total Sales</h5>
                                                    <h2 class="card-text" id="totalSales">₵0.00</h2>
                                                    <p class="card-text"><small>Last 30 days</small></p>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="card bg-success text-white">
                                                <div class="card-body">
                                                    <h5 class="card-title">Items Sold</h5>
                                                    <h2 class="card-text" id="totalItems">0</h2>
                                                    <p class="card-text"><small>Last 30 days</small></p>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-4">
                                            <div class="card bg-info text-white">
                                                <div class="card-body">
                                                    <h5 class="card-title">Average Sale</h5>
                                                    <h2 class="card-text" id="avgSale">₵0.00</h2>
                                                    <p class="card-text"><small>Last 30 days</small></p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Sales Chart -->
                                    <div class="row mb-4">
                                        <div class="col-12">
                                            <div class="card">
                                                <div class="card-body">
                                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                                        <h5 class="card-title mb-0">Sales Trend</h5>
                                                        <div class="btn-group">
                                                            <button type="button"
                                                                class="btn btn-outline-secondary btn-sm"
                                                                data-range="7">7 Days</button>
                                                            <button type="button"
                                                                class="btn btn-outline-secondary btn-sm"
                                                                data-range="30">30 Days</button>
                                                            <button type="button"
                                                                class="btn btn-outline-secondary btn-sm"
                                                                data-range="90">90 Days</button>
                                                        </div>
                                                    </div>
                                                    <canvas id="salesChart"></canvas>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Sales Management -->
                                    <div class="card">
                                        <div class="card-body">
                                            <div
                                                class="d-flex flex-wrap justify-content-between align-items-center p-4 bg-white rounded">
                                                <!-- Title with icon -->
                                                <div class="d-flex align-items-center">
                                                    <i class='bx bx-shopping-bag fs-4 text-primary me-2'></i>
                                                    <h5 class="card-title mb-0 fw-bold text-primary">Sales Records</h5>
                                                </div>

                                                <!-- Actions Container -->
                                                <div class="d-flex flex-wrap gap-3 align-items-center">
                                                    <!-- Search Input -->
                                                    <div class="input-group" style="width: auto; min-width: 250px;">
                                                        <input type="text"
                                                            class="form-control shadow-none border border-end-0"
                                                            id="searchInput" placeholder="Search transactions..."
                                                            style="height: 42px;">
                                                        <button
                                                            class="btn btn-outline-secondary  border border-start-0 bg-white"
                                                            type="button" style="height: 42px;">
                                                            <i class='bx bx-search fs-5'></i>
                                                        </button>
                                                    </div>

                                                    <!-- New Sale Button -->
                                                    <button type="button"
                                                        class="btn btn-primary d-flex align-items-center gap-2 px-4"
                                                        style="height: 42px;" data-bs-toggle="modal"
                                                        data-bs-target="#addSaleModal">
                                                        <i class='bx bx-plus fs-5'></i>
                                                        <span class="fw-semibold">New Sale</span>
                                                    </button>

                                                    <!-- Export Dropdown -->
                                                    <div class="dropdown">
                                                        <button
                                                            class="btn btn-outline-secondary dropdown-toggle d-flex align-items-center gap-2"
                                                            type="button" data-bs-toggle="dropdown"
                                                            aria-expanded="false" style="height: 42px;">
                                                            <i class='bx bx-export fs-5'></i>
                                                            <span>Export</span>
                                                        </button>
                                                        <ul class="dropdown-menu dropdown-menu-end shadow-sm border-light"
                                                            style="min-width: 200px;">
                                                            <li>
                                                                <a class="dropdown-item py-2 px-3 d-flex align-items-center gap-2"
                                                                    href="#" onclick="exportData('csv')">
                                                                    <i class='bx bx-file fs-5'></i>
                                                                    Export as CSV
                                                                </a>
                                                            </li>
                                                            <li>
                                                                <a class="dropdown-item py-2 px-3 d-flex align-items-center gap-2"
                                                                    href="#" onclick="exportData('pdf')">
                                                                    <i class='bx bx-file-pdf fs-5'></i>
                                                                    Export as PDF
                                                                </a>
                                                            </li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>

                                            <!-- Sales Table -->
                                            <div class="table-responsive">
                                                <table class="table table-hover">
                                                    <thead>
                                                        <tr>
                                                            <th>Product</th>
                                                            <th>Quantity</th>
                                                            <th>Total Price</th>
                                                            <th>Customer</th>
                                                            <th>Date</th>
                                                            <th>Status</th>
                                                            <th>Actions</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="salesTableBody">
                                                        <% sales.forEach(sale=> { %>
                                                            <tr>
                                                                <td>
                                                                    <%= sale.productId.name %>
                                                                </td>
                                                                <td>
                                                                    <%= sale.quantitySold %>
                                                                </td>
                                                                <td>
                                                                    <%= sale.totalPrice ? `₵
                                                                        ${sale.totalPrice.toFixed(2)}` : '₵0.00' %>
                                                                </td>
                                                                <td>
                                                                    <%= sale.customerName %>
                                                                </td>
                                                                <td>
                                                                    <%= new Date(sale.saleDate).toLocaleDateString() %>
                                                                </td>
                                                                <td>
                                                                    <span
                                                                        class="badge bg-<%= sale.status === 'completed' ? 'success' : (sale.status === 'pending' ? 'warning' : 'danger') %>">
                                                                        <%= sale.status %>
                                                                    </span>
                                                                </td>
                                                                <td>
                                                                    <div class="d-flex gap-2">
                                                                        <button class="btn btn-sm btn-info edit-sale"
                                                                            data-sale-id="<%= sale._id %>"
                                                                            data-product-id="<%= sale.productId._id %>"
                                                                            data-quantity="<%= sale.quantitySold %>"
                                                                            data-customer="<%= sale.customerName %>"
                                                                            data-bs-toggle="modal"
                                                                            data-bs-target="#editSaleModal">
                                                                            <i class='bx bx-edit-alt'></i>
                                                                        </button>
                                                                        <button
                                                                            class="btn btn-sm btn-danger delete-sale"
                                                                            data-sale-id="<%= sale._id %>"
                                                                            data-bs-toggle="modal"
                                                                            data-bs-target="#deleteSaleModal">
                                                                            <i class='bx bx-trash'></i>
                                                                        </button>
                                                                    </div>
                                                                </td>
                                                            </tr>
                                                            <% }); %>
                                                    </tbody>
                                                </table>
                                            </div>

                                            <!-- Pagination -->
                                            <!-- Pagination -->
                                            <nav aria-label="Sales navigation"
                                                class="d-flex justify-content-between align-items-center mt-3">
                                                <div class="text-muted">
                                                    Showing
                                                    <%= (page - 1) * limit + 1 %>-
                                                        <%= Math.min(page * limit, total) %>
                                                            of
                                                            <%= total %> entries
                                                </div>
                                                <ul class="pagination mb-0">
                                                    <!-- Previous Button -->
                                                    <li class="page-item <%= page <= 1 ? 'disabled' : '' %>">
                                                        <a class="page-link"
                                                            href="?page=<%= page - 1 %>&limit=<%= limit %>&startDate=<%= startDate || '' %>&endDate=<%= endDate || '' %>">Previous</a>
                                                    </li>

                                                    <!-- Page Numbers -->
                                                    <% for (let i=1; i <=Math.ceil(total / limit); i++) { %>
                                                        <li class="page-item <%= i === page ? 'active' : '' %>">
                                                            <a class="page-link"
                                                                href="?page=<%= i %>&limit=<%= limit %>&startDate=<%= startDate || '' %>&endDate=<%= endDate || '' %>">
                                                                <%= i %>
                                                            </a>
                                                        </li>
                                                        <% } %>

                                                            <!-- Next Button -->
                                                            <li
                                                                class="page-item <%= page >= Math.ceil(total / limit) ? 'disabled' : '' %>">
                                                                <a class="page-link"
                                                                    href="?page=<%= page + 1 %>&limit=<%= limit %>&startDate=<%= startDate || '' %>&endDate=<%= endDate || '' %>">Next</a>
                                                            </li>
                                                </ul>
                                            </nav>

                                        </div>
                                    </div>
                                </div>
                        </div>
                </div>
            </div>
            </div>

            <!-- Add Sale Modal -->
            <div class="modal fade" id="addSaleModal" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Add New Sale</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <form action="/api/sales/create" method="POST">
                            <div class="modal-body">
                                <div class="mb-3">
                                    <label for="productId" class="form-label">Product</label>
                                    <select class="form-control" id="productId" name="productId" required>
                                        <option value="">Select Product</option>
                                        <% materials.forEach(function(product) { %>
                                            <option value="<%= product._id %>" data-price="<%= product.unitPrice %>"
                                                data-stock="<%= product.stock %>">
                                                <%= product.name %> - ₵<%= product.unitPrice %> (Stock: <%=
                                                            product.stock %>)
                                            </option>
                                            <% }); %>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="quantitySold" class="form-label">Quantity</label>
                                    <input type="number" class="form-control" id="quantitySold" name="quantitySold"
                                        min="1" required>
                                    <div class="form-text text-muted">Available stock: <span
                                            id="availableStock">-</span></div>
                                </div>
                                <div class="mb-3">
                                    <label for="customerName" class="form-label">Customer Name</label>
                                    <input type="text" class="form-control" id="customerName" name="customerName"
                                        required>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Total Price</label>
                                    <div class="form-control" id="totalPrice">₵0.00</div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-primary">Create Sale</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Edit Sale Modal -->
            <div class="modal fade" id="editSaleModal" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Edit Sale</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <form id="editSaleForm" method="POST">
                            <div class="modal-body">
                                <input type="hidden" id="editSaleId" name="saleId">
                                <div class="mb-3">
                                    <label for="editProductId" class="form-label">Product</label>
                                    <select class="form-control" id="editProductId" name="productId" required>
                                        <option value="">Select Product</option>
                                        <% materials.forEach(function(product) { %>
                                            <option value="<%= product._id %>" data-price="<%= product.unitPrice %>"
                                                data-stock="<%= product.stock %>">
                                                <%= product.name %> - ₵<%= product.unitPrice %> (Stock: <%=
                                                            product.stock %>)
                                            </option>
                                            <% }); %>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="editQuantitySold" class="form-label">Quantity</label>
                                    <input type="number" class="form-control" id="editQuantitySold" name="quantitySold"
                                        min="1" required>
                                    <div class="form-text text-muted">Available stock: <span
                                            id="editAvailableStock">-</span></div>
                                </div>
                                <div class="mb-3">
                                    <label for="editCustomerName" class="form-label">Customer Name</label>
                                    <input type="text" class="form-control" id="editCustomerName" name="customerName"
                                        required>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Total Price</label>
                                    <div class="form-control" id="editTotalPrice">₵0.00</div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                                <button type="submit" class="btn btn-primary">Update Sale</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Delete Sale Modal -->
            <div class="modal fade" id="deleteSaleModal" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Delete Sale</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <p>Are you sure you want to delete this sale? This action cannot be undone.</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
                        </div>
                    </div>
                </div>
            </div>

            <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    loadSalesData(7);

                    // Initialize Chart.js
                    const ctx = document.getElementById('salesChart').getContext('2d');
                    const salesChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: [],
                            datasets: [{
                                label: 'Sales Amount',
                                data: [],
                                borderColor: 'rgb(75, 192, 192)',
                                tension: 0.1
                            }]
                        },
                        options: {
                            responsive: true,
                            scales: {
                                y: {
                                    beginAtZero: true,
                                    ticks: {
                                        callback: value => '₵' + value
                                    }
                                }
                            }
                        }
                    });

                    // Load Sales Data
                    async function loadSalesData(days = 7) {
                        try {
                            const response = await fetch(`/api/sales/stats?days=${days}`);
                            const data = await response.json();

                            // Update chart
                            salesChart.data.labels = data.map(item =>
                                new Date(item._id.year, item._id.month - 1).toLocaleDateString()
                            );
                            salesChart.data.datasets[0].data = data.map(item => item.totalSales);
                            salesChart.update();

                            // Update summary cards
                            const totalSales = data.reduce((sum, item) => sum + item.totalSales, 0);
                            const totalItems = data.reduce((sum, item) => sum + item.totalItems, 0);
                            const avgSale = totalSales / data.reduce((sum, item) => sum + item.count, 0);
                            console.log('Total Sales:', totalSales);
                            console.log('Total Items:', totalItems);
                            console.log('Average Sale:', avgSale);
                            document.getElementById('totalSales').textContent = '₵' + totalSales.toFixed(2);
                            document.getElementById('totalItems').textContent = totalItems;
                            document.getElementById('avgSale').textContent = '₵' + avgSale.toFixed(2);
                        } catch (error) {
                            console.error('Error loading sales data:', error);
                        }
                    }

                    // Initialize date range buttons
                    document.querySelectorAll('[data-range]').forEach(button => {
                        button.addEventListener('click', function () {
                            loadSalesData(this.dataset.range);
                            // Update active state
                            document.querySelectorAll('[data-range]').forEach(btn =>
                                btn.classList.remove('active')
                            );
                            this.classList.add('active');
                        });
                    });

                    // Calculate total price based on quantity and unit price
                    function updateTotalPrice(form) {
                        const quantity = parseInt(form.quantitySold.value) || 0;
                        const select = form.productId;
                        const option = select.options[select.selectedIndex];
                        const unitPrice = parseFloat(option.dataset.price) || 0;
                        const total = quantity * unitPrice;

                        const totalPriceElement = form.closest('.modal').querySelector('[id$="TotalPrice"]');
                        totalPriceElement.textContent = '₵' + total.toFixed(2);
                    }

                    // Add event listeners for quantity changes
                    ['addSaleForm', 'editSaleForm'].forEach(formId => {
                        const form = document.getElementById(formId);
                        form.quantitySold.addEventListener('input', () => updateTotalPrice(form));
                        form.productId.addEventListener('change', () => updateTotalPrice(form));
                    });

                    // Export functionality
                    window.exportData = async function (format) {
                        try {
                            const response = await fetch('/api/sales/export?format=' + format);
                            if (format === 'csv') {
                                const blob = await response.blob();
                                const url = window.URL.createObjectURL(blob);
                                const a = document.createElement('a');
                                a.href = url;
                                a.download = 'sales_report.csv';
                                document.body.appendChild(a);
                                a.click();
                                window.URL.revokeObjectURL(url);
                            }
                        } catch (error) {
                            console.error('Error exporting data:', error);
                            alert('Error exporting data');
                        }
                    };

                    // Load initial data
                });
            </script>

            <script>
                document.addEventListener('DOMContentLoaded', function () {
                    // Calculate total price for new sale
                    const calculateTotal = (quantity, price) => {
                        return quantity && price ? (quantity * price).toFixed(2) : '0.00';
                    };

                    // Handle new sale
                    const productSelect = document.getElementById('productId');
                    const quantityInput = document.getElementById('quantitySold');
                    const totalPriceDiv = document.getElementById('totalPrice');
                    const stockSpan = document.getElementById('availableStock');

                    const updateNewSaleTotal = () => {
                        const selectedOption = productSelect.selectedOptions[0];
                        const price = selectedOption ? parseFloat(selectedOption.dataset.price) : 0;
                        const quantity = parseInt(quantityInput.value) || 0;
                        totalPriceDiv.textContent = `₵${calculateTotal(quantity, price)}`;
                        stockSpan.textContent = selectedOption ? selectedOption.dataset.stock : '-';
                    };

                    productSelect.addEventListener('change', updateNewSaleTotal);
                    quantityInput.addEventListener('input', updateNewSaleTotal);

                    // Handle edit sale
                    const editButtons = document.querySelectorAll('.edit-sale');
                    editButtons.forEach(button => {
                        button.addEventListener('click', () => {
                            const saleId = button.dataset.saleId;
                            const productId = button.dataset.productId;
                            const quantity = button.dataset.quantity;
                            const customer = button.dataset.customer;

                            document.getElementById('editSaleId').value = saleId;
                            document.getElementById('editProductId').value = productId;
                            document.getElementById('editQuantitySold').value = quantity;
                            document.getElementById('editCustomerName').value = customer;

                            // Update form action
                            const editForm = document.getElementById('editSaleForm');
                            editForm.action = `/api/sales/${saleId}`;
                            editForm.method = 'PUT';

                            // Calculate total
                            const selectedOption = document.getElementById('editProductId').selectedOptions[0];
                            const price = selectedOption ? parseFloat(selectedOption.dataset.price) : 0;
                            document.getElementById('editTotalPrice').textContent = `₵${calculateTotal(quantity, price)}`;
                            document.getElementById('editAvailableStock').textContent = selectedOption ? selectedOption.dataset.stock : '-';
                        });
                    });

                    // Handle edit sale calculations
                    const editProductSelect = document.getElementById('editProductId');
                    const editQuantityInput = document.getElementById('editQuantitySold');
                    const editTotalPriceDiv = document.getElementById('editTotalPrice');
                    const editStockSpan = document.getElementById('editAvailableStock');

                    const updateEditSaleTotal = () => {
                        const selectedOption = editProductSelect.selectedOptions[0];
                        const price = selectedOption ? parseFloat(selectedOption.dataset.price) : 0;
                        const quantity = parseInt(editQuantityInput.value) || 0;
                        editTotalPriceDiv.textContent = `₵${calculateTotal(quantity, price)}`;
                        editStockSpan.textContent = selectedOption ? selectedOption.dataset.stock : '-';
                    };

                    editProductSelect.addEventListener('change', updateEditSaleTotal);
                    editQuantityInput.addEventListener('input', updateEditSaleTotal);

                    // Handle delete sale
                    const deleteButtons = document.querySelectorAll('.delete-sale');
                    const confirmDeleteButton = document.getElementById('confirmDelete');
                    let saleToDelete = null;

                    deleteButtons.forEach(button => {
                        button.addEventListener('click', () => {
                            saleToDelete = button.dataset.saleId;
                        });
                    });

                    confirmDeleteButton.addEventListener('click', async () => {
                        if (saleToDelete) {
                            try {
                                const response = await fetch(`/api/sales/${saleToDelete}`, {
                                    method: 'DELETE',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    }
                                });
                                // Close the modal and refresh the page
                                const deleteModal = new bootstrap.Modal(document.getElementById('deleteSaleModal'));
                                deleteModal.hide();
                                window.location.reload();

                            } catch (error) {
                                console.error('Error:', error);
                                alert('Error deleting sale');
                            }
                        }
                    });

                });
            </script>
            <%- include('layouts/footer') %>

    </body>

</html>